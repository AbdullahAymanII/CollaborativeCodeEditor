#name: CI/CD Pipeline
#
#on:
#  push:
#    branches:
#      - feature-websocket
#
#jobs:
#  build-backend:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Log in to Docker Hub
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#
#      - name: Build and Push Backend Image
#        run: |
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest -f ./editor/Dockerfile ./editor
#          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest
#
#  build-frontend:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Log in to Docker Hub
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#
#      - name: Build and Push Frontend Image
#        run: |
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -f ./frontend/Dockerfile ./frontend
#          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
#
#  deploy-backend:
#    needs: build-backend
#    runs-on: ubuntu-latest
#    steps:
#      - name: SSH into Backend EC2
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.AWS_BACKEND_HOST }}
#          username: i-0adabf6ef59b093e9
#          key: ${{ secrets.AWS_SSH_KEY }}
#          script: |
#            # Pull the latest backend image
#            docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
#
#            # Stop and remove existing backend container
#            docker stop backend || true
#            docker rm backend || true
#
#            # Run MySQL container
#            docker run --name mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=mysql_db -p 3306:3306 -d mysql:8.0 || docker start mysql
#
#            # Run MongoDB container
#            docker run --name mongo -e MONGO_INITDB_ROOT_USERNAME=devroot -e MONGO_INITDB_ROOT_PASSWORD=devroot -p 27017:27017 -d mongo || docker start mongo
#
#            # Run the backend container
#            docker run -d -p 8080:8080 --name backend --link mysql:mysql --link mongo:mongo ${{ secrets.DOCKER_USERNAME }}/backend:latest
#
#  deploy-frontend:
#    needs: build-frontend
#    runs-on: ubuntu-latest
#    steps:
#      - name: SSH into Frontend EC2
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.AWS_FRONTEND_HOST }}
#          username: i-013c7f2dc6a0b6e68
#          key: ${{ secrets.AWS_SSH_KEY }}
#          script: |
#            # Pull the latest frontend image
#            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
#
#            # Stop and remove existing frontend container
#            docker stop frontend || true
#            docker rm frontend || true
#
#            # Run the frontend container
#            docker run -d -p 3000:3000 --name frontend ${{ secrets.DOCKER_USERNAME }}/frontend:latest